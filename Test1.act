ACTIONFILE V4

ENABLED True

EVENT UIFsdMassLocked, UIFsdMassLocked, "", Condition AlwaysTrue
EVENT onRefreshEnd, StartupShutdown, "", Condition AlwaysTrue
EVENT onShutdown, StartupShutdown, "", Condition AlwaysTrue
EVENT UIFsdCharging, UIFsdCharging, "", Condition AlwaysTrue
EVENT UIFsdCooldown, UIFsdCooldown, "", Condition AlwaysTrue
EVENT UISupercruise, UISupercruise, "", Condition AlwaysTrue
EVENT UILandingGear, UILandingGear, "", Condition AlwaysTrue
EVENT FSDJump, FSDJump, "", Condition AlwaysTrue
EVENT Docked, JournalDocked, "", Condition AlwaysTrue
EVENT UIDocked, UIDocked, "", Condition AlwaysTrue
EVENT onStartup, onStartup, "", Condition AlwaysTrue
EVENT StartJump, StartJump, "", Condition AlwaysTrue
EVENT Location, AtLocation, "", Condition AlwaysTrue

//*************************************************************
// onStartup
// Events: onStartup
//*************************************************************
PROGRAM onStartup

// Declare set set flags
Global isMassLocked = 0
Global isFsdCooldown = 0
Global isFsdCharging = 0
Global isStartHyperJump = 0
Global isStartSupercruise = 0
Global isDocked = 0
Global superCruiseState = 0

// Declare and set strings
Global currentSystem = ""
Global starClass = ""
Global currentDock = ""

END PROGRAM

//*************************************************************
// updateMFD
//*************************************************************
PROGRAM updateMFD

// ToDo: Move all MFD setup based on variables here

// Always reset MFD
DLLCall EDDX52, resetMFD

// Set first line based on state
If isStartHyperJump IsTrue
    DLLCall EDDX52, setString, 0, "Jumping to:", MFD_STARTJUMP1
ElseIf isDocked IsTrue
    DLLCall EDDX52, setString, 0, "Docked:", MFD_JDOCKED1
Else 
    DLLCall EDDX52, setString, 0, "System:", MFD_FSDJUMP1

If currentSystem $!= ""
    DLLCall EDDX52, setString, 1, %(currentSystem), MFD_STARTJUMP2
Else 
    DLLCall EDDX52, setString, 1, "UNKNOWN", MFD_STARTJUMP2

If starClass $!= ""
    DLLCall EDDX52, setString, 2, "Type: %(starClass)", MFD_STARTJUMP3

END PROGRAM

//*************************************************************
// updateFsdLights
//*************************************************************
PROGRAM updateFsdLights

// This handles the lighting on T3/T4 which shows the FSD state using the following priority.
// isFsdCooldown > isFsdCharging > isStartHyperJump > isMassLocked > superCruiseState
If isFsdCooldown IsTrue
    // Cooldown state T3/T4 = Red flashing 1s on 1s off
    DLLCall EDDX52, setLED, TOGGLE_3_4, RED
    DLLCall EDDX52, advSetLED, 11, 1, 1, 1, 1, 0
    DLLCall EDDX52, syncFlashPatterns
ElseIf isFsdCharging IsTrue
    // Charging state T3/T4 = Amber flashing .25s on .25s off
    DLLCall EDDX52, setLED, TOGGLE_3_4, OFF
    DLLCall EDDX52, advSetLED, 11, 1, 1, 0.25, 0.25, 0
    DLLCall EDDX52, advSetLED, 12, 1, 1, 0.25, 0.25, 0
    DLLCall EDDX52, syncFlashPatterns  
ElseIf isStartHyperJump IsTrue
    // Hyperspace jump in progress = T3/T4 = Amber (will change soon)
    DLLCall EDDX52, setLED, TOGGLE_3_4, YELLOW
ElseIf isMassLocked IsTrue
    // Mass locked = T3/T4 = Red
    DLLCall EDDX52, setLED, TOGGLE_3_4, RED
ElseIf superCruiseState IsTrue
    // In supercruise = T3/T4 = Green flashing 1s on 1s off
    DLLCall EDDX52, setLED, TOGGLE_3_4, OFF
    DLLCall EDDX52, advSetLED, 12, 1, 1, 1, 1, 0
    DLLCall EDDX52, syncFlashPatterns  
Else 
    // Otherwise in regular space = T3/T4 = Green
    DLLCall EDDX52, setLED, TOGGLE_3_4, GREEN

END PROGRAM

//*************************************************************
// updateGearLight
//*************************************************************
PROGRAM updateGearLight

// ToDo: Move all gear light settings here

END PROGRAM

//*************************************************************
// UIFsdMassLocked
// Events: UIFsdMassLocked
//*************************************************************
PROGRAM UIFsdMassLocked

If EventClass_MassLocked IsTrue
    Global isMassLocked = 1
Else 
    Global isMassLocked = 0
Call updateFsdLights

END PROGRAM

//*************************************************************
// UIFsdCooldown
// Events: UIFsdCooldown
//*************************************************************
PROGRAM UIFsdCooldown

If EventClass_CoolDown IsTrue
    Global isFsdCooldown = 1
Else 
    Global isFsdCooldown = 0

Call updateFsdLights

END PROGRAM

//*************************************************************
// UISupercruise
// Events: UISupercruise
//*************************************************************
PROGRAM UISupercruise

If EventClass_Supercruise IsTrue
    Global superCruiseState = 1
Else 
    Global superCruiseState = 0

Call updateFsdLights

END PROGRAM

//*************************************************************
// UIFsdCharging
// Events: UIFsdCharging
//*************************************************************
PROGRAM UIFsdCharging

If EventClass_Charging IsTrue
    Global isFsdCharging = 1
Else 
    Global isFsdCharging = 0

Call updateFsdLights

END PROGRAM

//*************************************************************
// AtLocation
// Events: Location
//*************************************************************
PROGRAM AtLocation
	// Seems to be called at game start so let's populate info we can get
	If EventClass_Docked IsTrue
		Global isDocked = 1
	Else
		Global isDocked = 0
	
	If EventClass_StarSystem $!= ""
		Global currentSystem = %(EventClass_StarSystem)
	
	If EventClass_StationName $!= ""
		Global currentDock = %(EventClass_StationName)
		
	Call updateMFD

END PROGRAM

//*************************************************************
// StartJump
// Events: StartJump
//*************************************************************
PROGRAM StartJump

If EventClass_JumpType $== Hyperspace
    Global isStartSupercruise = 0
    Global isStartHyperJump = 1
    Global currentSystem = %(EventClass_StarSystem)
    Global starClass = %(EventClass_StarClass)
Else 
    Global isStartHyperJump = 0
    Global isStartSupercruise = 1
    Global currentSystem = %(EventClass_StarSystem)

Call updateFsdLights
Call updateMFD

END PROGRAM

//*************************************************************
// FSDJump
// Events: FSDJump
//*************************************************************
PROGRAM FSDJump

Global isStartHyperJump = 0
Global currentSystem = %(EventClass_StarSystem)

Call updateFsdLights
Call updateMFD

END PROGRAM

//*************************************************************
// UILandingGear
// Events: UILandingGear
//*************************************************************
PROGRAM UILandingGear

If EventClass_Gear IsTrue
    DLLCall EDDX52, setLED, TOGGLE_1_2, RED
Else 
    DLLCall EDDX52, setLED, TOGGLE_1_2, GREEN

END PROGRAM

//*************************************************************
// JournalDocked
// Events: Docked
//*************************************************************
PROGRAM JournalDocked

Global isDocked = 1
Global currentDock = %(EventClass_StationName)
If currentSystem $== ""
    Global currentSystem = %(EventClass_StarSystem)

Call updateMFD

END PROGRAM

//*************************************************************
// UIDocked
// Events: UIDocked
//*************************************************************
PROGRAM UIDocked

If EventClass_Docked IsFalse
    Global isDocked = 0
    Global currentDock = ""

    If currentSystem $!= ""
        Call updateMFD

END PROGRAM

//*************************************************************
// StartupShutdown
// Events: onRefreshEnd, onShutdown
//*************************************************************
PROGRAM StartupShutdown

DLLCall EDDX52, setLED, FIRE, GREEN
DLLCall EDDX52, setLED, FIRE_A, GREEN
DLLCall EDDX52, setLED, FIRE_B, GREEN
DLLCall EDDX52, setLED, FIRE_D, GREEN
DLLCall EDDX52, setLED, FIRE_E, GREEN
DLLCall EDDX52, setLED, TOGGLE_1_2, GREEN
DLLCall EDDX52, setLED, TOGGLE_3_4, GREEN
DLLCall EDDX52, setLED, TOGGLE_5_6, GREEN
DLLCall EDDX52, setLED, POV_2, GREEN
DLLCall EDDX52, setLED, CLUTCH, GREEN
DLLCall EDDX52, setLED, THROTTLE, ON
// Global isMassLocked = 0

END PROGRAM

